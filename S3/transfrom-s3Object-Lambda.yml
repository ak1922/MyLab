AWSTemplateFormatVersion: 2010-09-09
Description: |
  Create s3 bucket, use Lambda function to transform content

#Parameters:
  
Resources:
  
  rS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: ak-lambda-tranf-01
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      Tags:
        - Key: Name
          Value: s3LambdaTransform

  rS3AccessPoint:
    Type: AWS::S3::AccessPoint
    Properties: 
      Bucket: !Ref rS3Bucket
      Name: !Join [ "-", [ !Ref rS3Bucket, "ap" ] ]


  rIAMRole:
    Type: AWS::IAM::Role
    Properties:
      Description: IAM role for Lambda to s3
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - lambda.amazonaws.com
      Policies:
        - PolicyName: s3LambdaTransformPolicy
          PolicyDocument: 
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - s3-object-lambda:WriteGetObjectResponse
              Resource: "*"
      RoleName: s3LambdaTransformRole
      Tags:
        - Key: Name
          Value: s3LambdaTransform


Outputs:
  rS3AccessPointName:
    Description: Name of s3 access point
    Value: !GetAtt rS3AccessPoint.Name